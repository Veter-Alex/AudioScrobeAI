обавлен Redis и правки моделей/роутеров для совместимости с mypy и SQLAlchemy

зменения:
- обавлен сервис `redis` в `docker-compose.yml` (образ redis:7-alpine, volume redis_data, порт 6379) и прописан `REDIS_HOST` в окружении `app`.
- браны mapped-поля `translated_text` и `target_language` из `src/models/translations.py`.
  место этого используются реальные колонки `text_translation_en` / `text_translation_ru`;
  transient-атрибут `_requested_target_language` используется для хранения запрошенного языка при создании перевода.
- бновлён роутер `src/routers/translations.py`:
  - создание перевода теперь сохраняет `_requested_target_language` на экземпляре;
  - обновление (`PUT`) записывает текст в соответствующую language-specific колонку (ru/en) в зависимости от запроса;
  - фильтрация списка и статистика по целевым языкам получаются из transient-атрибута или по наличию language-specific колонок.
- обавлены/исправлены type-only импорты (`if TYPE_CHECKING`) и явные аннотации `Mapped[...]` для моделей, чтобы корректно работать с SQLAlchemy mypy plugin.
- справлены места создания ORM-объектов в сервисах/роутерах: вместо передачи kwargs — создание экземпляра и присваивание атрибутов (устранение ошибок плагина mypy).
- справлен `src/database/health_check.py`: безопасный сбор expected_tables и создание superadmin через атрибуты (избегаем вызовов с unexpected kwargs).
- роведён прогон mypy — ошибок типов в `src` не найдено.

ричина: подготовка проекта к строгому статическому анализу (mypy + SQLAlchemy plugin) и добавление Redis в стек для кеширования/тасков.
