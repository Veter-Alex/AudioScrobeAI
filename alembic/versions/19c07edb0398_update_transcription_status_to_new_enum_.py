"""Update transcription status to new enum and add error_text

Revision ID: 19c07edb0398
Revises: 8abfdf67382e
Create Date: 2025-09-02 22:59:01.239433

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '19c07edb0398'
down_revision: Union[str, Sequence[str], None] = '8abfdf67382e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the new enum
    transcription_status_enum = sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='transcription_status')
    transcription_status_enum.create(op.get_bind(), checkfirst=True)
    
    op.add_column('transcriptions', sa.Column('error_text', sa.String(), nullable=True))
    op.alter_column('transcriptions', 'status',
               existing_type=postgresql.ENUM('UPLOADED', 'PROCESSING', 'DONE', 'ERROR', name='status'),
               type_=transcription_status_enum,
               existing_nullable=False,
               postgresql_using="'PENDING'::transcription_status")  # Default to PENDING since old values don't match
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('transcriptions', 'status',
               existing_type=sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='transcription_status'),
               type_=postgresql.ENUM('UPLOADED', 'PROCESSING', 'DONE', 'ERROR', name='status'),
               existing_nullable=False,
               postgresql_using="'UPLOADED'::status")  # Default to UPLOADED
    op.drop_column('transcriptions', 'error_text')
    
    # Drop the new enum
    transcription_status_enum = sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='transcription_status')
    transcription_status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
